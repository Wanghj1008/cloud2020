1.Redis为什么这么快？
    1.Redis基于内存,不需要磁盘IO操作
    2.Redis数据结构简单,是KEY-VALUE形式,查询时间复杂度O(1)
    3.6.0引入多线程优化网络 I/O
    4.多路复用IO
2.缓存类型：
    1.本地缓存
        本地缓存是内存访问,性能最好                               缺点：1.容量受单机限制  2.重启失效
    2.分布式缓存
        解决本地缓存重启失效和单机容量受限问题,并且可以多系统共用缓存   缺点：1.需要保证高可用性增加学习和维护成本
    3.多级缓存
        本地缓存+分布式缓存
-----------------------------------------------------------------------------------------------------
1.假如Redis里面有1亿个key，其中有10w个key是以某个固定的已知的前缀开头的，如何将它们全部找出来？
    使用keys *查询,但是会阻塞客户端,一般使用scan游标迭代器进行查询虽然效率比keys低但是不会阻塞进程,如果游标从0到0说明迭代结束,结果有重复概率需要客户端去重
2.scan命令有什么缺点吗，一定能够完全获取全量的数据吗？
    不一定,因为scan遍历过的地方就不在遍历了,所以增删改在遍历过的地方就会造成数据遗漏
3.一个字符串最大内存容量？  512M
4.如何保证redis中的数据都是热点数据？
    redis内存到达最大内存,就会实行淘汰策略。淘汰策略LRU和LFU 最近最少使用和最近不经常使用。可以将不是热点的淘汰。保证最后都是热点
5.Pipeline有什么好处？ AOF重写中使用管道
    可以将redis多次毫不相干的指令改变读写顺序一次性写入内存,一次性读取相应来减少IO次数
    缺点：操作没执行完毕响应存在内存中,消耗内存,建议分批发送,通过压力测试管道并行数超过14性能开始降低
6.Lua脚本：
    1.多个请求通过脚本一次发送,减少多次IO消耗
    2.原子操作,将整个脚本当成整体执行,中间不会插入其他命令
    3.脚本可以存在redis中,可以复用

3.是否使用过Redis集群，集群的高可用怎么保证，集群的原理是什么？
  Redis Sentinal 着眼于高可用，在master宕机时会自动将slave提升为master，继续提供服务。
  Redis Cluster 着眼于扩展性，在单个redis内存不足时，使用Cluster进行分片存储。
